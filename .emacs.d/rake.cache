#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("/Users/pablobfonseca/code/freela/99aulas/99aulasapp/" ("about                                        # List versions of all Rails frameworks and the environment" "app:clear_data                               # Clear data.." "app:create_admin                             # Create admin.." "app:create_fake:courses                      # Create fake courses data.." "app:create_fake:highlights                   # Create fake highlights.." "app:create_fake:lessons                      # Create fake lessons data.." "app:create_fake:reviews                      # Create fake reviews.." "app:create_fake:transactions                 # Create fake transactions data.." "app:create_fake:users                        # Create fake users data.." "app:load_incoming_taxes                      # Load initial incoming taxes.." "app:load_initial_categories                  # Load initial categories.." "app:template                                 # Applies the template supplied by LOCATION=(/path/to/template) or URL" "app:templates:copy                           # " "app:update                                   # Update configs and some other initially generated files (or use just update:configs or update:bin)" "app:update:bin                               # " "app:update:configs                           # " "app:update:upgrade_guide_info                # " "assets:clean[keep]                           # Remove old compiled assets" "assets:clobber                               # Remove compiled assets" "assets:environment                           # Load asset compile environment" "assets:precompile                            # Compile all the assets named in config.assets.precompile" "autoprefixer:info                            # Show selected browsers and prefixed CSS properties and values" "cache_digests:dependencies                   # Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)" "cache_digests:nested_dependencies            # Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)" "db:_dump                                     # " "db:abort_if_pending_migrations               # " "db:charset                                   # " "db:check_protected_environments              # " "db:collation                                 # " "db:create                                    # Creates the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:create:all to create all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to creating the development and test databases" "db:create:all                                # " "db:drop                                      # Drops the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:drop:all to drop all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to dropping the development and test databases" "db:drop:_unsafe                              # " "db:drop:all                                  # " "db:environment:set                           # Set the environment value for the database" "db:fixtures:identify                         # " "db:fixtures:load                             # Loads fixtures into the current environment's database" "db:forward                                   # " "db:load_config                               # " "db:migrate                                   # Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)" "db:migrate:down                              # " "db:migrate:redo                              # " "db:migrate:reset                             # " "db:migrate:status                            # Display status of migrations" "db:migrate:up                                # " "db:purge                                     # " "db:purge:all                                 # " "db:reset                                     # " "db:rollback                                  # Rolls the schema back to the previous version (specify steps w/ STEP=n)" "db:schema:cache:clear                        # Clears a db/schema_cache.dump file" "db:schema:cache:dump                         # Creates a db/schema_cache.dump file" "db:schema:dump                               # Creates a db/schema.rb file that is portable against any DB supported by Active Record" "db:schema:load                               # Loads a schema.rb file into the database" "db:schema:load_if_ruby                       # " "db:seed                                      # Loads the seed data from db/seeds.rb" "db:setup                                     # Creates the database, loads the schema, and initializes with the seed data (use db:reset to also drop the database first)" "db:structure:dump                            # Dumps the database structure to db/structure.sql" "db:structure:load                            # Recreates the databases from the structure.sql file" "db:structure:load_if_sql                     # " "db:test:clone                                # " "db:test:clone_schema                         # " "db:test:clone_structure                      # " "db:test:deprecated                           # " "db:test:load                                 # " "db:test:load_schema                          # " "db:test:load_structure                       # " "db:test:prepare                              # " "db:test:purge                                # " "db:version                                   # Retrieves the current schema version number" "default                                      # " "dev:cache                                    # Toggle development mode caching on/off" "environment                                  # " "initializers                                 # Print out all defined initializers in the order they are invoked by Rails" "log:clear                                    # Truncates all/specified *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)" "middleware                                   # Prints out your Rack middleware stack" "notes                                        # Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" "notes:custom                                 # Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" "notes:fixme                                  # " "notes:optimize                               # " "notes:todo                                   # " "pg_search:multisearch:rebuild[model,schema]  # Rebuild PgSearch multisearch records for a given model" "rails:template                               # " "rails:templates:copy                         # " "rails:update                                 # " "rails:update:bin                             # " "rails:update:configs                         # " "railties:install:migrations                  # " "restart                                      # Restart app by touching tmp/restart.txt" "routes                                       # Print out all defined routes in match order, with names" "secret                                       # Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" "stats                                        # Report code statistics (KLOCs, etc) from the application or engine" "test                                         # Runs all tests in test folder" "test:controllers                             # " "test:db                                      # Run tests quickly, but also reset db" "test:decorators                              # Run tests for {:decorators=>\"test:prepare\"}" "test:functionals                             # " "test:generators                              # " "test:helpers                                 # " "test:integration                             # " "test:jobs                                    # " "test:mailers                                 # " "test:models                                  # " "test:prepare                                 # " "test:run                                     # " "test:units                                   # " "time:zones[country_or_offset]                # List all time zones, list by two-letter country code (`rails time:zones[US]`), or list by UTC offset (`rails time:zones[-8]`)" "time:zones:all                               # " "time:zones:local                             # " "time:zones:us                                # " "tmp                                          # " "tmp/cache                                    # " "tmp/cache/assets                             # " "tmp/pids                                     # " "tmp/sockets                                  # " "tmp:cache:clear                              # " "tmp:clear                                    # Clear cache and socket files from tmp/ (narrow w/ tmp:cache:clear, tmp:sockets:clear)" "tmp:create                                   # Creates tmp directories for cache, sockets, and pids" "tmp:pids:clear                               # " "tmp:sockets:clear                            # ")))